- hosts: localhost
  become: true

  vars:
    crictl_version: "v1.30.0"
    kubernetes_version: "1.31"
    kubernetes_role: control_plane
    kubernetes_allow_pods_on_control_plane: true
    kubernetes_pod_network:
      cni: 'flannel'
      cidr: '10.244.0.0/16'
    kubernetes_kubelet_extra_args: "--node-ip={{ ansible_default_ipv4.address }}"
    kubernetes_flannel_manifest_file: "https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml"

  pre_tasks:
    - name: Update all packages (apt)
      apt:
        update_cache: yes

    - name: Install ntp
      apt:
        name: ntp
        state: present

    - name: Update time
      service:
        name: ntp
        state: restarted

    - name: Enable br_netfilter module
      modprobe:
        name: br_netfilter
        state: present

    - name: Disable swap
      shell: swapoff -a
      when: swap_disabled | default(true)

    - name: Enable IP forwarding
      sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        sysctl_set: true
        state: present

    - name: Update apt cache
      apt:
        update_cache: yes

  roles:
    - role: geerlingguy.pip
    - role: geerlingguy.containerd
    - role: geerlingguy.kubernetes

  post_tasks:
  - name: Configure Flannel networking for enp0s8
    shell: "curl {{ kubernetes_flannel_manifest_file }} | sed '/kube-subnet-mgr.*/a\\        - --iface=enp0s8' | kubectl apply -f -"
    register: flannel_result
    changed_when: "'created' in flannel_result.stdout"
    when: kubernetes_pod_network.cni == 'flannel' and kubernetes_role == 'control_plane' and installation_method == 'vagrant'
    retries: 3
    delay: 5

  - name: Download crictl binary
    get_url:
      url: "https://github.com/kubernetes-sigs/cri-tools/releases/download/{{ crictl_version }}/crictl-{{ crictl_version }}-linux-amd64.tar.gz"
      dest: /tmp/crictl.tar.gz

  - name: Extract crictl binary
    ansible.builtin.unarchive:
      src: /tmp/crictl.tar.gz
      dest: /usr/local/bin
      remote_src: yes

  - name: Remove crictl archive
    ansible.builtin.file:
      path: /tmp/crictl.tar.gz
      state: absent

  - name: Create crictl configuration directory
    ansible.builtin.file:
      path: /etc/crictl.d
      state: directory

  - name: Configure crictl
    ansible.builtin.copy:
      content: |
        runtime-endpoint: unix:///var/run/containerd/containerd.sock
        image-endpoint: unix:///var/run/containerd/containerd.sock
        timeout: 2
        debug: true
        pull-image-on-create: false
      dest: /etc/crictl.yaml    